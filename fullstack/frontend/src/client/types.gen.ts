// This file is auto-generated by @hey-api/openapi-ts

export type AggregatedTransactions = {
  groups: Array<TransactionGroup>
  overall_withdrawals: number
  overall_deposits: number
  overall_balance: number
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: Token
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type TransactionGroup = {
  category_id: number
  total_withdrawals: number
  total_deposits: number
  total_balance: number
  transactions: Array<TransactionOut>
}

export type TransactionKind = "withdrawal" | "deposit"

export type TransactionOut = {
  description: string
  category_id: number
  date_of_transaction: string
  amount: number
  transaction_source_id: number
  kind: TransactionKind
  uploaded_pdf_id?: number | null
  user_id: number
  archived?: boolean
  id: number
}

export type UserNewPassword = {
  new_password: string
  old_password: string
}

export type UserOut = {
  full_name: string
  email: string
  is_active?: boolean
  is_superuser?: boolean
  id: number
  created_at?: string | null
  updated_at?: string | null
}

export type UserRegister = {
  email: string
  password: string
  full_name: string
}

export type UsersPublic = {
  [key: string]: unknown
}

export type UserUpdate = {
  [key: string]: unknown
}

export type UserUpdateMe = {
  [key: string]: unknown
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserOut

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserOut

export type TransactionsGetTransactionsResponse = Array<TransactionOut>

export type TransactionsGetAggregatedTransactionsResponse =
  AggregatedTransactions

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserRegister
}

export type UsersCreateUserResponse = UserOut

export type UsersReadUserMeResponse = UserOut

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserOut

export type UsersUpdatePasswordMeData = {
  requestBody: UserNewPassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserOut

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserOut

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserOut

export type UsersDeleteUserData = {
  userId: number
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
