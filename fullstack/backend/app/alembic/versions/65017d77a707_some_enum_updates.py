"""some enum updates

Revision ID: 65017d77a707
Revises: a912abebfabb
Create Date: 2025-06-01 11:26:14.876470

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '65017d77a707'
down_revision = 'a912abebfabb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Create the ENUM type
    effect_conditionals_enum = postgresql.ENUM(
        'AMOUNT_OVER', 'COUNT_OF_TRANSACTIONS', 'UNCONDITIONAL',
        name='effectconditionals'
    )
    plaid_sync_log_status_enum = postgresql.ENUM(
        'SUCCESS', 'FAILURE',
        name='syncstatus'
    )
    effect_conditionals_enum.create(op.get_bind())
    plaid_sync_log_status_enum.create(op.get_bind())

    # 2. Then add the column
    op.alter_column('effect', 'condition',
               existing_type=postgresql.ENUM('AMOUNT_OVER', 'COUNT_OF_TRANSACTIONS', name='effectconditionals'),
               nullable=True)
    op.add_column('plaid_sync_log', sa.Column('status', plaid_sync_log_status_enum, nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('plaid_sync_log', 'status')
    op.alter_column('effect', 'condition',
               existing_type=postgresql.ENUM('AMOUNT_OVER', 'COUNT_OF_TRANSACTIONS', name='effectconditionals'),
               nullable=False)
    # ### end Alembic commands ###
