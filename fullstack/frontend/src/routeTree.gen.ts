/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsImport } from './routes/terms'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LandingImport } from './routes/landing'
import { Route as FaqImport } from './routes/faq'
import { Route as DemoImport } from './routes/demo'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutUploadFilesImport } from './routes/_layout/upload-files'
import { Route as LayoutTransactionsImport } from './routes/_layout/transactions'
import { Route as LayoutTermsImport } from './routes/_layout/terms'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutSankeyConfigImport } from './routes/_layout/sankey-config'
import { Route as LayoutPrivacyImport } from './routes/_layout/privacy'
import { Route as LayoutManageAccountsImport } from './routes/_layout/manage-accounts'
import { Route as LayoutHowImport } from './routes/_layout/how'
import { Route as LayoutFaqImport } from './routes/_layout/faq'
import { Route as LayoutContactMeImport } from './routes/_layout/contact-me'
import { Route as LayoutBudgetImport } from './routes/_layout/budget'
import { Route as LayoutAdminImport } from './routes/_layout/admin'

// Create/Update Routes

const TermsRoute = TermsImport.update({
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const DemoRoute = DemoImport.update({
  path: '/demo',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUploadFilesRoute = LayoutUploadFilesImport.update({
  path: '/upload-files',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTransactionsRoute = LayoutTransactionsImport.update({
  path: '/transactions',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTermsRoute = LayoutTermsImport.update({
  path: '/terms',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSankeyConfigRoute = LayoutSankeyConfigImport.update({
  path: '/sankey-config',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyRoute = LayoutPrivacyImport.update({
  path: '/privacy',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutManageAccountsRoute = LayoutManageAccountsImport.update({
  path: '/manage-accounts',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHowRoute = LayoutHowImport.update({
  path: '/how',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFaqRoute = LayoutFaqImport.update({
  path: '/faq',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutContactMeRoute = LayoutContactMeImport.update({
  path: '/contact-me',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBudgetRoute = LayoutBudgetImport.update({
  path: '/budget',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/demo': {
      preLoaderRoute: typeof DemoImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      preLoaderRoute: typeof TermsImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/budget': {
      preLoaderRoute: typeof LayoutBudgetImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/contact-me': {
      preLoaderRoute: typeof LayoutContactMeImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/faq': {
      preLoaderRoute: typeof LayoutFaqImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/how': {
      preLoaderRoute: typeof LayoutHowImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/manage-accounts': {
      preLoaderRoute: typeof LayoutManageAccountsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy': {
      preLoaderRoute: typeof LayoutPrivacyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/sankey-config': {
      preLoaderRoute: typeof LayoutSankeyConfigImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/terms': {
      preLoaderRoute: typeof LayoutTermsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/transactions': {
      preLoaderRoute: typeof LayoutTransactionsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/upload-files': {
      preLoaderRoute: typeof LayoutUploadFilesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutBudgetRoute,
    LayoutContactMeRoute,
    LayoutFaqRoute,
    LayoutHowRoute,
    LayoutManageAccountsRoute,
    LayoutPrivacyRoute,
    LayoutSankeyConfigRoute,
    LayoutSettingsRoute,
    LayoutTermsRoute,
    LayoutTransactionsRoute,
    LayoutUploadFilesRoute,
    LayoutIndexRoute,
  ]),
  DemoRoute,
  FaqRoute,
  LandingRoute,
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
  TermsRoute,
])

/* prettier-ignore-end */
